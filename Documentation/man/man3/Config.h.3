.TH "headers/Config.h" 3 "Wed Oct 5 2016" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
headers/Config.h \- 
structure of a player  

.SH SYNOPSIS
.br
.PP
\fC#include 'Consts\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBPosition\fP"
.br
.RI "\fIstructure of positions x and y are clamped between 0 and 7,to represent to position of a piece on the board\&. \fP"
.ti -1c
.RI "struct \fBPiece\fP"
.br
.RI "\fI\fBPiece\fP struct\&. \fP"
.ti -1c
.RI "struct \fBStack\fP"
.br
.RI "\fI\fBStack\fP struct The dead pieces\&. \fP"
.ti -1c
.RI "struct \fBPlayer\fP"
.br
.ti -1c
.RI "struct \fBGame\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBfree_game\fP (\fBGame\fP *game)"
.br
.ti -1c
.RI "void \fBfree_player\fP (\fBPlayer\fP *player)"
.br
.ti -1c
.RI "void \fBfree_position\fP (\fBPosition\fP *position)"
.br
.ti -1c
.RI "void \fBprint_board\fP (\fBGame\fP *game)"
.br
.ti -1c
.RI "void \fBread_pieces\fP (\fBGame\fP *game)"
.br
.ti -1c
.RI "\fBGame\fP * \fBinit_blank_game\fP ()"
.br
.ti -1c
.RI "\fBGame\fP * \fBget_board_copy\fP (\fBGame\fP *src)"
.br
.ti -1c
.RI "\fBGame\fP * \fBinit_board\fP (const char *filename)"
.br
.ti -1c
.RI "void \fBsave_board\fP (const char *filename)"
.br
.ti -1c
.RI "\fBERROR\fP \fBcheck_for_errors\fP ()"
.br
.ti -1c
.RI "uint8_t \fBget_pieceID\fP (\fBPiece\fP piece)"
.br
.ti -1c
.RI "void \fBadd_to_array\fP (\fBPiece\fP *piece, int size, \fBPiece\fP P)"
.br
.ti -1c
.RI "\fBbool\fP \fBcheck_valid_position\fP (\fBPosition\fP pos)"
.br
.ti -1c
.RI "void \fBprint_piece\fP (\fBPiece\fP *p)"
.br
.ti -1c
.RI "\fBbool\fP \fBequal_game\fP (\fBGame\fP *g1, \fBGame\fP *g2)"
.br
.ti -1c
.RI "\fBbool\fP \fBequal_piece\fP (\fBPiece\fP *p1, \fBPiece\fP *p2)"
.br
.in -1c
.SH "Detailed Description"
.PP 
structure of a player 


.SH "Function Documentation"
.PP 
.SS "void add_to_array (\fBPiece\fP *piece, intsize, \fBPiece\fPP)"

.SS "\fBERROR\fP check_for_errors ()"

.SS "\fBbool\fP check_valid_position (\fBPosition\fPpos)"

.SS "\fBbool\fP equal_game (\fBGame\fP *g1, \fBGame\fP *g2)"

.SS "\fBbool\fP equal_piece (\fBPiece\fP *p1, \fBPiece\fP *p2)"

.SS "void free_game (\fBGame\fP *game)"

.SS "void free_player (\fBPlayer\fP *player)\fC [inline]\fP"

.SS "void free_position (\fBPosition\fP *position)\fC [inline]\fP"

.SS "\fBGame\fP* get_board_copy (\fBGame\fP *src)"

.SS "uint8_t get_pieceID (\fBPiece\fPpiece)"

.SS "\fBGame\fP* init_blank_game ()"

.SS "\fBGame\fP* init_board (const char *filename)"

.SS "void print_board (\fBGame\fP *game)\fC [inline]\fP"

.SS "void print_piece (\fBPiece\fP *p)\fC [inline]\fP"

.SS "void read_pieces (\fBGame\fP *game)\fC [inline]\fP"

.SS "void save_board (const char *filename)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
